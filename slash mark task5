import speech_recognition as sr
import pyttsx3
import datetime
import webbrowser
import os
import subprocess

# Initialize the recognizer and TTS engine
recognizer = sr.Recognizer()
tts_engine = pyttsx3.init()

# Set properties for the TTS engine
tts_engine.setProperty('rate', 150)  # Speed of speech
tts_engine.setProperty('volume', 1)  # Volume (0.0 to 1.0)

# Function to convert text to speech
def speak(text):
    tts_engine.say(text)
    tts_engine.runAndWait()

# Function to recognize speech
def recognize_speech():
    with sr.Microphone() as source:
        print("Listening...")
        audio = recognizer.listen(source)
        try:
            print("Recognizing...")
            command = recognizer.recognize_google(audio)
            print(f"User said: {command}")
            return command.lower()
        except sr.UnknownValueError:
            speak("Sorry, I did not understand that.")
            return ""
        except sr.RequestError:
            speak("Sorry, my speech service is down.")
            return ""

# Define task functions
def tell_time():
    now = datetime.datetime.now().strftime("%H:%M:%S")
    speak(f"The current time is {now}")

def open_website(url):
    webbrowser.open(url)
    speak(f"Opening {url}")

def open_application(path):
    try:
        os.startfile(path)
        speak("Application opened successfully")
    except Exception as e:
        speak(f"Sorry, I could not open the application. {e}")

def perform_search(query):
    webbrowser.open(f"https://www.google.com/search?q={query}")
    speak(f"Searching for {query}")

def execute_command(command):
    if "time" in command:
        tell_time()
    elif "open website" in command:
        url = command.replace("open website ", "")
        open_website(url)
    elif "search" in command:
        query = command.replace("search ", "")
        perform_search(query)
    elif "open application" in command:
        path = command.replace("open application ", "")
        open_application(path)
    elif "exit" in command or "quit" in command:
        speak("Goodbye!")
        exit()
    else:
        speak("Sorry, I don't understand that command.")

# Main function to run the assistant
def run_voice_assistant():
    speak("Hello, I am your voice assistant. How can I help you today?")
    while True:
        command = recognize_speech()
        if command:
            execute_command(command)

# Run the voice assistant
if __name__ == "__main__":
    run_voice_assistant()
